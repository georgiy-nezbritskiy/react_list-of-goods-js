{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setRevers","visibleGoods","goods","query","prepearedGoods","sort","good1","good2","length","localeCompare","sortGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SAqBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAtBR,SAAmBC,EAAOC,GACxB,IAAMC,EAAc,YAAOF,GAe3B,OAbAE,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQJ,GACN,KAAKT,EACH,OAAOY,EAAME,OAASD,EAAMC,OAE9B,KAAKf,EACH,OAAOa,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAINH,EAMcM,CAAUlB,EAAiBK,GAMhD,OAJIE,GACFE,EAAaF,UAIb,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYhB,IAAcJ,IAC9BqB,QAAS,kBAAMhB,EAAaL,IAJ9B,iCASA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYhB,IAAcH,IAC9BoB,QAAS,kBAAMhB,EAAaJ,IAJ9B,4BASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAwB,YAAZd,IAChBe,QAAS,WAELd,EADED,EACQ,GAEA,YARhB,sBAeEF,GAAaE,IAEf,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,EAAU,KALd,sBAaF,6BAEIC,EAAac,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCpGpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3ce3221e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction sortGoods(goods, query) {\n  const prepearedGoods = [...goods];\n\n  prepearedGoods.sort((good1, good2) => {\n    switch (query) {\n      case SORT_FIELD_LENGTH:\n        return good1.length - good2.length;\n\n      case SORT_FIELD_NAME:\n        return good1.localeCompare(good2);\n\n      default:\n        return 0;\n    }\n  });\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setRevers] = useState('');\n  const visibleGoods = sortGoods(goodsFromServer, sortField);\n\n  if (reverse) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_FIELD_NAME })}\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': reverse !== 'reverse' })}\n          onClick={() => {\n            if (reverse) {\n              setRevers('');\n            } else {\n              setRevers('reverse');\n            }\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse)\n        && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSortField('');\n            setRevers('');\n          }}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}